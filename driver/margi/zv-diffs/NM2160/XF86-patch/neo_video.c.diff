--- neo_video.c.org	Wed Feb  6 18:52:58 2002
+++ neo_video.c	Wed Feb  6 21:47:50 2002
@@ -263,6 +263,10 @@
     xf86DrvMsg(pScrn->scrnIndex,X_INFO,"NEOPutVideo: src: %d %d %d %d\n", src_x, src_y, src_w, src_h);
     xf86DrvMsg(pScrn->scrnIndex,X_INFO,"NEOPutVideo: drw: %d %d %d %d\n", drw_x, drw_y, drw_w, drw_h);
 #endif
+    if (src_w > 720)
+      src_w = 720;
+    if (src_h > 240) /* NTSC */
+      src_h = 240;
     x1 = src_x;
     y1 = src_y;
     x2 = src_x + src_w;
@@ -296,12 +300,12 @@
 	xscale = (src_w * 0x1000 / drw_w) & 0xffff;
     }
 
-    yscale = 0x0800;
+    yscale = 0x1000;
     if (src_h <= drw_h){
-	yscale = (src_h * 0x0800 / drw_h) & 0xffff;
+	yscale = (src_h * 0x1000 / drw_h) & 0xffff;
     }
 
-    size = src_h * src_pitch;
+    size = src_h * src_pitch * 2;
     if ((pPriv->linear = NEOAllocateMemory(pScrn, pPriv->linear, size)) == NULL){
 	return (BadAlloc);
     }
@@ -354,8 +358,8 @@
     OUTSR(0x18, 0+x2-1);
     OUTSR(0x19, (((0+x2-1)>>4)&0xf0)|(((0+x1)>>8)&0x0f));
 
-    OUTSR(0x14, 14 + y1/2);
-    OUTSR(0x15, 14 + y2/2 - 2);
+    OUTSR(0x14, 14 + y1);
+    OUTSR(0x15, 14 + y2 - 1);
     OUTSR(0x16, 0);
 
     OUTSR(0x1c, 0xfb);
@@ -801,9 +805,9 @@
     }
 
     if (drw_h > src_h){
-	vstretch = src_h * 0x0800 / drw_h;
+	vstretch = src_h * 0x1000 / drw_h;
     } else {
-	vstretch = 0x0800;
+	vstretch = 0x1000;
     }
 
     OUTGR(0xb1, (((dstBox->x2-1)>>4)&0xf0)|((dstBox->x1>>8)&0x0f));
-----------------------------------------------------------------------

--- ../NM2160-ZV-0.3/NM-reg.txt	Mon Feb  4 21:41:11 2002
+++ NM-reg.txt	Wed Feb  6 21:11:19 2002
@@ -27,7 +27,7 @@
         bit1:0  b'10'
   GRC0          X scale[15:8] ; x1.0 == 0x1000
   GRC1          X scale[7:0]
-  GRC2          Y scale[15:8] ; x2.0 == 0x0800
+  GRC2          Y scale[15:8] ; x1.0 == 0x1000
   GRC3          Y scale[7:0]
   GRC4          brightness   ; -128 to +127
   GRC5          Color key(R)
@@ -51,10 +51,10 @@
   SR11          -
   SR12          -
   SR13          -
-  SR14          (Y1 / 2)[7:0]
-  SR15          (Y2 / 2)[7:0]
-  SR16  bit7:4  (Y2 / 2)[11:4]
-        bit3:0  (Y1 / 2)[11:4]
+  SR14          Y1[7:0]
+  SR15          Y2[7:0]
+  SR16  bit7:4  Y2[11:4]
+        bit3:0  Y1[11:4]
   SR17          X1[7:0]
   SR18          X2[7:0]
   SR19  bit7:4  X2[11:8]
--------------------------------------------------------------
